#!/bin/bash
### BEGIN INIT INFO
# Provides:          S9011sMesh
# Should-Start:      $syslog
# Should-Stop:       $syslog
# Default-Start:     2 3 4 5
# Default-Stop:      0 1 6
# Short-Description: start S9011sMesh during boot time
# Description:       wifi mesh daemon for configuring mesh network
#                    automatically
### END INIT INFO

DAEMON="mesh-11s.sh"
DIR="/opt/"
PIDFILE="/var/run/$DAEMON.pid"
LOG_FILE=/opt/mesh_11s.log
source /opt/mesh.conf
# shellcheck source=/dev/null
[ -r "/etc/default/$DAEMON" ] && . "/etc/default/$DAEMON"
MYMESH_ARGS="${MODE} ${IP} ${MASK} ${MAC} ${KEY} ${ESSID} ${FREQ} ${TXPOWER} ${COUNTRY} ${MESH_VIF} ${PHY} ${ROUTING}"
start() {
    echo $MYMESH_ARGS
    printf 'Starting %s: ' "$DAEMON"
    start-stop-daemon -b -m -S -q -p "$PIDFILE" -a /bin/bash -- -c "exec $DIR$DAEMON \
          $MYMESH_ARGS > $LOG_FILE 2>&1"
    status=$?
    if [ "$status" -eq 0 ]; then
        echo "OK"
    else
        echo "FAIL"
    fi
    return "$status"
}
stop() {
#/etc/init.d/S9011sMesh stop <interface>
    printf 'Stopping %s: ' "$DAEMON"
    NEW_PID=$(ps ax|grep wpa_supplicant |grep adhoc | awk {'print $1'})
    kill -9 $NEW_PID
    ifconfig $MESH_VIF down
    ifconfig $MESH_VIF up
    start-stop-daemon -K -q -p "$PIDFILE"
    status=$?
    if [ "$status" -eq 0 ]; then
        rm -f "$PIDFILE"
        echo "OK"
    else
        echo "FAIL"
    fi
    return "$status"
}
restart() {
    stop
    sleep 1
    start
}
case "$1" in
    start|stop|restart)
        "$1";;
    reload)
        # Restart, since there is no true "reload" feature.
        restart;;
    *)
        echo "Usage: $0 {start|stop|restart|reload}"
        exit 1
esac

exit 0
